apply from: 'buildsystem/ci.gradle'
apply from: 'buildsystem/dependencies.gradle'

def getVersionCode = { ->
    try {
        def code = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'tag', '--list'
            standardOutput = code
        }
        return code.toString().split("\n").size()
    }
    catch (ignored) {
        return -1;
    }
}

def getVersionName = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags', '--dirty'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }
    catch (ignored) {
        return null;
    }
}

buildscript {
    repositories {
        jcenter()
        maven { url 'https://www.testfairy.com/maven' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.3'
        classpath 'com.testfairy.plugins.gradle:testfairy:1.+'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
    }
}

allprojects {
    repositories {
        jcenter()
    }
    ext {
        androidApplicationId = 'com.feragusper.buenosairesantesydespues'
        androidVersionCode = getVersionCode()
        androidVersionName = getVersionName()
        testInstrumentationRunner = "android.support.test.runner.AndroidJUnitRunner"
        testApplicationId = 'com.feragusper.buenosairesantesydespues.presentation.test'
    }
}

task wrapper(type: Wrapper) {
    description 'Creates the gradle wrapper.'
    gradleVersion '2.4'
}

task runAcceptanceTests(dependsOn: [':presentation:connectedAndroidTest']) {
    description 'Run application acceptance tests.'
}

task runUnitTests(dependsOn: [':domain:test', ':data-test:test']) {
    description 'Run unit tests for both domain and data layers.'
}